// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github_artifact_provider.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Configuration for the GitHub artifact provider.
type GitHubArtifactProvider struct {
	// Whether the GitHub artifact provider is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The list of configured GitHub accounts.
	Accounts             []*GitHubArtifactAccount `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GitHubArtifactProvider) Reset()         { *m = GitHubArtifactProvider{} }
func (m *GitHubArtifactProvider) String() string { return proto.CompactTextString(m) }
func (*GitHubArtifactProvider) ProtoMessage()    {}
func (*GitHubArtifactProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_20a9bb440033c085, []int{0}
}

func (m *GitHubArtifactProvider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubArtifactProvider.Unmarshal(m, b)
}
func (m *GitHubArtifactProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubArtifactProvider.Marshal(b, m, deterministic)
}
func (m *GitHubArtifactProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubArtifactProvider.Merge(m, src)
}
func (m *GitHubArtifactProvider) XXX_Size() int {
	return xxx_messageInfo_GitHubArtifactProvider.Size(m)
}
func (m *GitHubArtifactProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubArtifactProvider.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubArtifactProvider proto.InternalMessageInfo

func (m *GitHubArtifactProvider) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *GitHubArtifactProvider) GetAccounts() []*GitHubArtifactAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// Configuration for a GitHub artifact account. Either `username` and
// `password`, `usernamePasswordFile`, `token`, or `tokenFile` should be
// specified as means of authentication.
type GitHubArtifactAccount struct {
	// The name of the account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The GitHub account username.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The GitHub account password.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// The path to a file containing the username and password of the account
	// in the format `${username}:${password}`.
	UsernamePasswordFile string `protobuf:"bytes,4,opt,name=usernamePasswordFile,proto3" json:"usernamePasswordFile,omitempty"`
	// The GitHub access token.
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	// The path to a file containing the GitHub access token.
	TokenFile            string   `protobuf:"bytes,6,opt,name=tokenFile,proto3" json:"tokenFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitHubArtifactAccount) Reset()         { *m = GitHubArtifactAccount{} }
func (m *GitHubArtifactAccount) String() string { return proto.CompactTextString(m) }
func (*GitHubArtifactAccount) ProtoMessage()    {}
func (*GitHubArtifactAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_20a9bb440033c085, []int{1}
}

func (m *GitHubArtifactAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubArtifactAccount.Unmarshal(m, b)
}
func (m *GitHubArtifactAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubArtifactAccount.Marshal(b, m, deterministic)
}
func (m *GitHubArtifactAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubArtifactAccount.Merge(m, src)
}
func (m *GitHubArtifactAccount) XXX_Size() int {
	return xxx_messageInfo_GitHubArtifactAccount.Size(m)
}
func (m *GitHubArtifactAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubArtifactAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubArtifactAccount proto.InternalMessageInfo

func (m *GitHubArtifactAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GitHubArtifactAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GitHubArtifactAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GitHubArtifactAccount) GetUsernamePasswordFile() string {
	if m != nil {
		return m.UsernamePasswordFile
	}
	return ""
}

func (m *GitHubArtifactAccount) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GitHubArtifactAccount) GetTokenFile() string {
	if m != nil {
		return m.TokenFile
	}
	return ""
}

func init() {
	proto.RegisterType((*GitHubArtifactProvider)(nil), "proto.GitHubArtifactProvider")
	proto.RegisterType((*GitHubArtifactAccount)(nil), "proto.GitHubArtifactAccount")
}

func init() { proto.RegisterFile("github_artifact_provider.proto", fileDescriptor_20a9bb440033c085) }

var fileDescriptor_20a9bb440033c085 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x95, 0xb6, 0x29, 0xe9, 0xb1, 0x9d, 0x0a, 0xb2, 0x50, 0x85, 0xaa, 0x4e, 0x9d, 0x32,
	0x84, 0x85, 0x35, 0x0b, 0x30, 0x46, 0x79, 0x81, 0xc8, 0x4e, 0x0c, 0x58, 0x04, 0x3b, 0xf2, 0x1f,
	0x78, 0x48, 0x5e, 0x0a, 0x71, 0x4e, 0x82, 0x2a, 0x65, 0xf2, 0x7d, 0xdf, 0xef, 0xe7, 0xb3, 0x0c,
	0xf7, 0x6f, 0xca, 0xbf, 0x07, 0xd1, 0x70, 0xeb, 0xd5, 0x2b, 0x6f, 0x7d, 0x33, 0x58, 0xf3, 0xa5,
	0x3a, 0x69, 0xf3, 0xc1, 0x1a, 0x6f, 0x30, 0xa5, 0xe3, 0xd4, 0xc3, 0xed, 0xb3, 0xf2, 0x2f, 0x41,
	0x94, 0xa3, 0x57, 0x8d, 0x1a, 0x32, 0xb8, 0x92, 0x9a, 0x8b, 0x5e, 0x76, 0x2c, 0x39, 0x26, 0xe7,
	0xac, 0x9e, 0x22, 0x3e, 0x42, 0xc6, 0xdb, 0xd6, 0x04, 0xed, 0x1d, 0x5b, 0x1d, 0xd7, 0xe7, 0xeb,
	0xe2, 0x10, 0x97, 0xe6, 0x97, 0xab, 0xca, 0x28, 0xd5, 0xb3, 0x7d, 0xfa, 0x49, 0xe0, 0x66, 0xd1,
	0x41, 0x84, 0x8d, 0xe6, 0x9f, 0x92, 0x9e, 0xda, 0xd5, 0x34, 0xe3, 0x1d, 0x64, 0xc1, 0x49, 0x4b,
	0xfd, 0x8a, 0xfa, 0x39, 0xff, 0xb1, 0x81, 0x3b, 0xf7, 0x6d, 0x6c, 0xc7, 0xd6, 0x91, 0x4d, 0x19,
	0x0b, 0xd8, 0x4f, 0x5e, 0x35, 0x76, 0x4f, 0xaa, 0x97, 0x6c, 0x43, 0xde, 0x22, 0xc3, 0x3d, 0xa4,
	0xde, 0x7c, 0x48, 0xcd, 0x52, 0x92, 0x62, 0xc0, 0x03, 0xec, 0x68, 0xa0, 0xeb, 0x5b, 0x22, 0xff,
	0x85, 0xd8, 0xd2, 0xa7, 0x1f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x72, 0xb7, 0x24, 0x8f, 0x6b,
	0x01, 0x00, 0x00,
}
