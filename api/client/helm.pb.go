// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helm.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Configuration for the Helm artifact provider.
type HelmProvider struct {
	// Whether the Helm artifact provider is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The list of configured Helm accounts.
	Accounts             []*HelmAccount `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HelmProvider) Reset()         { *m = HelmProvider{} }
func (m *HelmProvider) String() string { return proto.CompactTextString(m) }
func (*HelmProvider) ProtoMessage()    {}
func (*HelmProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_141ba45979af1a8e, []int{0}
}

func (m *HelmProvider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelmProvider.Unmarshal(m, b)
}
func (m *HelmProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelmProvider.Marshal(b, m, deterministic)
}
func (m *HelmProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelmProvider.Merge(m, src)
}
func (m *HelmProvider) XXX_Size() int {
	return xxx_messageInfo_HelmProvider.Size(m)
}
func (m *HelmProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_HelmProvider.DiscardUnknown(m)
}

var xxx_messageInfo_HelmProvider proto.InternalMessageInfo

func (m *HelmProvider) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *HelmProvider) GetAccounts() []*HelmAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// Configuration for a Helm artifact account. Either `username` and `password`
// or `usernamePasswordFile` should be specified as means of authentication.
type HelmAccount struct {
	// The name of the account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The Helm chart repository URL.
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	// A username for Helm chart repository basic auth.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// A password for Helm chart repository basic auth.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// The path to a file containing the username and password for Helm chart
	// repository basic auth. Must be in the format `${username}:${password}`.
	UsernamePasswordFile string   `protobuf:"bytes,5,opt,name=usernamePasswordFile,proto3" json:"usernamePasswordFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelmAccount) Reset()         { *m = HelmAccount{} }
func (m *HelmAccount) String() string { return proto.CompactTextString(m) }
func (*HelmAccount) ProtoMessage()    {}
func (*HelmAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_141ba45979af1a8e, []int{1}
}

func (m *HelmAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelmAccount.Unmarshal(m, b)
}
func (m *HelmAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelmAccount.Marshal(b, m, deterministic)
}
func (m *HelmAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelmAccount.Merge(m, src)
}
func (m *HelmAccount) XXX_Size() int {
	return xxx_messageInfo_HelmAccount.Size(m)
}
func (m *HelmAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_HelmAccount.DiscardUnknown(m)
}

var xxx_messageInfo_HelmAccount proto.InternalMessageInfo

func (m *HelmAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelmAccount) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *HelmAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *HelmAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *HelmAccount) GetUsernamePasswordFile() string {
	if m != nil {
		return m.UsernamePasswordFile
	}
	return ""
}

func init() {
	proto.RegisterType((*HelmProvider)(nil), "proto.HelmProvider")
	proto.RegisterType((*HelmAccount)(nil), "proto.HelmAccount")
}

func init() { proto.RegisterFile("helm.proto", fileDescriptor_141ba45979af1a8e) }

var fileDescriptor_141ba45979af1a8e = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x3f, 0x8b, 0x83, 0x40,
	0x10, 0xc5, 0xf1, 0xdf, 0x9d, 0x37, 0x5e, 0x35, 0x5c, 0xb1, 0x5c, 0x71, 0x88, 0x95, 0x95, 0x85,
	0xf7, 0x09, 0xd2, 0x84, 0x94, 0x62, 0x95, 0x76, 0xd5, 0x81, 0x08, 0xab, 0x2b, 0xbb, 0x9a, 0x90,
	0x0f, 0x95, 0xef, 0x18, 0x1c, 0xa3, 0x58, 0xa4, 0x9a, 0x79, 0xef, 0xf7, 0xe6, 0xc1, 0x00, 0x5c,
	0x48, 0x75, 0xd9, 0x60, 0xf4, 0xa8, 0x31, 0xe0, 0x91, 0x9c, 0xe1, 0xfb, 0x44, 0xaa, 0x2b, 0x8c,
	0xbe, 0xb6, 0x0d, 0x19, 0x14, 0xf0, 0x49, 0xbd, 0xac, 0x14, 0x35, 0xc2, 0x89, 0x9d, 0x34, 0x2c,
	0x57, 0x89, 0x19, 0x84, 0xb2, 0xae, 0xf5, 0xd4, 0x8f, 0x56, 0xb8, 0xb1, 0x97, 0x46, 0x39, 0x2e,
	0x55, 0xd9, 0x5c, 0x70, 0x58, 0x50, 0xb9, 0x65, 0x92, 0x87, 0x03, 0xd1, 0x8e, 0x20, 0x82, 0xdf,
	0xcb, 0x8e, 0xb8, 0xf6, 0xab, 0xe4, 0x1d, 0xff, 0x00, 0x0c, 0x0d, 0xda, 0xb6, 0xa3, 0x36, 0x77,
	0xe1, 0x32, 0xd9, 0x39, 0xf8, 0x0b, 0xe1, 0x64, 0xc9, 0xf0, 0x9d, 0xc7, 0x74, 0xd3, 0x33, 0x1b,
	0xa4, 0xb5, 0x37, 0x6d, 0x1a, 0xe1, 0x2f, 0x6c, 0xd5, 0x98, 0xc3, 0xcf, 0x9a, 0x2b, 0x5e, 0xde,
	0xb1, 0x55, 0x24, 0x02, 0xce, 0xbd, 0x65, 0xd5, 0x07, 0x3f, 0xf3, 0xff, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0x41, 0x85, 0x27, 0xbb, 0x25, 0x01, 0x00, 0x00,
}
