// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artifacts.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArtifactProviders struct {
	Bitbucket            *BitbucketProvider `protobuf:"bytes,1,opt,name=bitbucket,proto3" json:"bitbucket,omitempty"`
	Gcs                  *GcsProvider       `protobuf:"bytes,2,opt,name=gcs,proto3" json:"gcs,omitempty"`
	Github               *GitHubProvider    `protobuf:"bytes,3,opt,name=github,proto3" json:"github,omitempty"`
	Gitlab               *GitLabProvider    `protobuf:"bytes,4,opt,name=gitlab,proto3" json:"gitlab,omitempty"`
	Gitrepo              *GitRepoProvider   `protobuf:"bytes,5,opt,name=gitrepo,proto3" json:"gitrepo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ArtifactProviders) Reset()         { *m = ArtifactProviders{} }
func (m *ArtifactProviders) String() string { return proto.CompactTextString(m) }
func (*ArtifactProviders) ProtoMessage()    {}
func (*ArtifactProviders) Descriptor() ([]byte, []int) {
	return fileDescriptor_a56fa9fd5f0eb7ff, []int{0}
}

func (m *ArtifactProviders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactProviders.Unmarshal(m, b)
}
func (m *ArtifactProviders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactProviders.Marshal(b, m, deterministic)
}
func (m *ArtifactProviders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactProviders.Merge(m, src)
}
func (m *ArtifactProviders) XXX_Size() int {
	return xxx_messageInfo_ArtifactProviders.Size(m)
}
func (m *ArtifactProviders) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactProviders.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactProviders proto.InternalMessageInfo

func (m *ArtifactProviders) GetBitbucket() *BitbucketProvider {
	if m != nil {
		return m.Bitbucket
	}
	return nil
}

func (m *ArtifactProviders) GetGcs() *GcsProvider {
	if m != nil {
		return m.Gcs
	}
	return nil
}

func (m *ArtifactProviders) GetGithub() *GitHubProvider {
	if m != nil {
		return m.Github
	}
	return nil
}

func (m *ArtifactProviders) GetGitlab() *GitLabProvider {
	if m != nil {
		return m.Gitlab
	}
	return nil
}

func (m *ArtifactProviders) GetGitrepo() *GitRepoProvider {
	if m != nil {
		return m.Gitrepo
	}
	return nil
}

func init() {
	proto.RegisterType((*ArtifactProviders)(nil), "proto.ArtifactProviders")
}

func init() { proto.RegisterFile("artifacts.proto", fileDescriptor_a56fa9fd5f0eb7ff) }

var fileDescriptor_a56fa9fd5f0eb7ff = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2c, 0x2a, 0xc9,
	0x4c, 0x4b, 0x4c, 0x2e, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52,
	0xfc, 0x49, 0x99, 0x25, 0x49, 0xa5, 0xc9, 0xd9, 0xa9, 0x25, 0x10, 0x71, 0x29, 0xce, 0xf4, 0x64,
	0xa8, 0x12, 0x29, 0x9e, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0x24, 0x5e, 0x4e, 0x22, 0x8c, 0xc7,
	0x9b, 0x9e, 0x59, 0x52, 0x94, 0x5a, 0x90, 0x0f, 0xe1, 0x2a, 0x35, 0x32, 0x71, 0x09, 0x3a, 0x42,
	0x6d, 0x08, 0x28, 0xca, 0x2f, 0xcb, 0x4c, 0x49, 0x2d, 0x2a, 0x16, 0x32, 0xe3, 0xe2, 0x84, 0x1b,
	0x2f, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0x01, 0xd1, 0xa0, 0xe7, 0x04, 0x13, 0x87, 0xa9,
	0x0e, 0x42, 0x28, 0x15, 0x52, 0xe1, 0x62, 0x4e, 0x4f, 0x2e, 0x96, 0x60, 0x02, 0xeb, 0x10, 0x82,
	0xea, 0x70, 0x4f, 0x2e, 0x86, 0xab, 0x05, 0x49, 0x0b, 0xe9, 0x72, 0xb1, 0x41, 0x1c, 0x28, 0xc1,
	0x0c, 0x56, 0x28, 0x0a, 0x53, 0x98, 0x59, 0xe2, 0x51, 0x9a, 0x04, 0x57, 0x0b, 0x55, 0x04, 0x55,
	0x9e, 0x93, 0x98, 0x24, 0xc1, 0x82, 0xae, 0xdc, 0x27, 0x11, 0x55, 0x79, 0x4e, 0x62, 0x92, 0x90,
	0x01, 0x17, 0x3b, 0xd4, 0x8b, 0x12, 0xac, 0x60, 0xf5, 0x62, 0x08, 0xf5, 0x41, 0xa9, 0x05, 0xf9,
	0x70, 0x0d, 0x30, 0x65, 0x49, 0x6c, 0x60, 0x79, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74,
	0x3b, 0xa3, 0xb7, 0x6b, 0x01, 0x00, 0x00,
}
