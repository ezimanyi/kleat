// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Configuration for the GitHub artifact provider.
type GitHubProvider struct {
	// Whether the GitHub artifact provider is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The list of configured GitHub accounts.
	Accounts             []*GitHubAccount `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GitHubProvider) Reset()         { *m = GitHubProvider{} }
func (m *GitHubProvider) String() string { return proto.CompactTextString(m) }
func (*GitHubProvider) ProtoMessage()    {}
func (*GitHubProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{0}
}

func (m *GitHubProvider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubProvider.Unmarshal(m, b)
}
func (m *GitHubProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubProvider.Marshal(b, m, deterministic)
}
func (m *GitHubProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubProvider.Merge(m, src)
}
func (m *GitHubProvider) XXX_Size() int {
	return xxx_messageInfo_GitHubProvider.Size(m)
}
func (m *GitHubProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubProvider.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubProvider proto.InternalMessageInfo

func (m *GitHubProvider) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *GitHubProvider) GetAccounts() []*GitHubAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// Configuration for a GitHub artifact account. Either `username` and
// `password`, `usernamePasswordFile`, `token`, or `tokenFile` should be
// specified as means of authentication.
type GitHubAccount struct {
	// The name of the account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The GitHub account username.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The GitHub account password.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// The path to a file containing the username and password of the account
	// in the format `${username}:${password}`.
	UsernamePasswordFile string `protobuf:"bytes,4,opt,name=usernamePasswordFile,proto3" json:"usernamePasswordFile,omitempty"`
	// The GitHub access token.
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	// The path to a file containing the GitHub access token.
	TokenFile            string   `protobuf:"bytes,6,opt,name=tokenFile,proto3" json:"tokenFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitHubAccount) Reset()         { *m = GitHubAccount{} }
func (m *GitHubAccount) String() string { return proto.CompactTextString(m) }
func (*GitHubAccount) ProtoMessage()    {}
func (*GitHubAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{1}
}

func (m *GitHubAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubAccount.Unmarshal(m, b)
}
func (m *GitHubAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubAccount.Marshal(b, m, deterministic)
}
func (m *GitHubAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubAccount.Merge(m, src)
}
func (m *GitHubAccount) XXX_Size() int {
	return xxx_messageInfo_GitHubAccount.Size(m)
}
func (m *GitHubAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubAccount proto.InternalMessageInfo

func (m *GitHubAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GitHubAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GitHubAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GitHubAccount) GetUsernamePasswordFile() string {
	if m != nil {
		return m.UsernamePasswordFile
	}
	return ""
}

func (m *GitHubAccount) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GitHubAccount) GetTokenFile() string {
	if m != nil {
		return m.TokenFile
	}
	return ""
}

func init() {
	proto.RegisterType((*GitHubProvider)(nil), "proto.GitHubProvider")
	proto.RegisterType((*GitHubAccount)(nil), "proto.GitHubAccount")
}

func init() { proto.RegisterFile("github.proto", fileDescriptor_7664b366d7fb87ed) }

var fileDescriptor_7664b366d7fb87ed = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xcd, 0x4e, 0x85, 0x30,
	0x14, 0x84, 0xc3, 0xbd, 0x80, 0x70, 0xfc, 0x59, 0x9c, 0xb0, 0x68, 0x8c, 0x0b, 0xc2, 0x8a, 0x15,
	0x31, 0xf8, 0x04, 0x6e, 0xd4, 0x25, 0x61, 0xed, 0xa6, 0x85, 0x46, 0x1b, 0xb1, 0x25, 0xfd, 0xd1,
	0x07, 0xf4, 0xc5, 0x8c, 0xa7, 0x82, 0x31, 0xb9, 0xab, 0xce, 0xcc, 0x37, 0x9d, 0xe4, 0xc0, 0xc5,
	0x8b, 0xf2, 0xaf, 0x41, 0x74, 0xab, 0x35, 0xde, 0x60, 0x46, 0x4f, 0xf3, 0x0c, 0x57, 0x8f, 0xca,
	0x3f, 0x05, 0x31, 0x58, 0xf3, 0xa1, 0x66, 0x69, 0x91, 0xc1, 0x99, 0xd4, 0x5c, 0x2c, 0x72, 0x66,
	0x49, 0x9d, 0xb4, 0xc5, 0xb8, 0x59, 0xbc, 0x85, 0x82, 0x4f, 0x93, 0x09, 0xda, 0x3b, 0x76, 0xa8,
	0x8f, 0xed, 0x79, 0x5f, 0xc5, 0xb1, 0x2e, 0x4e, 0xdc, 0x47, 0x38, 0xee, 0xad, 0xe6, 0x2b, 0x81,
	0xcb, 0x7f, 0x0c, 0x11, 0x52, 0xcd, 0xdf, 0x25, 0x4d, 0x97, 0x23, 0x69, 0xbc, 0x86, 0x22, 0x38,
	0x69, 0x29, 0x3f, 0x50, 0xbe, 0xfb, 0x1f, 0xb6, 0x72, 0xe7, 0x3e, 0x8d, 0x9d, 0xd9, 0x31, 0xb2,
	0xcd, 0x63, 0x0f, 0xd5, 0xd6, 0x1b, 0x7e, 0xb3, 0x07, 0xb5, 0x48, 0x96, 0x52, 0xef, 0x24, 0xc3,
	0x0a, 0x32, 0x6f, 0xde, 0xa4, 0x66, 0x19, 0x95, 0xa2, 0xc1, 0x1b, 0x28, 0x49, 0xd0, 0xf7, 0x9c,
	0xc8, 0x5f, 0x20, 0x72, 0x3a, 0xf2, 0xee, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x9f, 0x4a, 0x29,
	0x41, 0x01, 0x00, 0x00,
}
