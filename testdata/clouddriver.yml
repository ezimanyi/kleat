appengine:
  accounts:
  - jsonPath: /var/secrets/appengine-account.json
    name: my-appengine-account
    project: spinnaker-maggie
    sshTrustUnknownHosts: true
  enabled: true
  primaryAccount: my-appengine-account
artifacts:
  bitbucket:
    accounts:
    - name: my-bitbucket-account
      password: my-bitbucket-password
      username: my-bitbucket-username
      usernamePasswordFile: /var/secrets/bitbucket
    enabled: true
  gcs:
    accounts:
    - jsonPath: /var/secrets/gcs
      name: my-gcs-account
    enabled: true
  github:
    accounts:
    - name: my-github-artifact-account
      tokenFile: /var/secrets/github
    - name: my-github-artifact-account-2
      password: my-password
      username: my-username
    enabled: true
  gitlab:
    accounts:
    - name: my-gitlab-artifact-account
      tokenFile: /var/secrets/gitlab
    enabled: true
  gitrepo:
    accounts:
    - name: my-git-repo-account
      sshKnownHostsFilePath: /var/secrets/known_hosts
      sshPrivateKeyFilePath: /var/secrets/git_repo_private_key
      sshPrivateKeyPassphrase: my-passphrase
    enabled: true
  helm:
    accounts:
    - name: my-helm-account
      repository: http://my-repository.com
      usernamePasswordFile: /var/secrets/helm
    enabled: true
  http:
    accounts:
    - name: my-http-account
      usernamePasswordFile: /var/secrets/http
    enabled: true
  maven:
    accounts:
    - name: my-maven-account
      repositoryUrl: http://some.host.com/repository/path
    enabled: true
  oracle:
    accounts:
    - fingerprint: my-fingerprint
      name: my-oracle-artifact-account
      namespace: my-namespace
      privateKeyPassphrase: my-passphrase
      region: my-region
      sshPrivateKeyFilePath: /var/secrets/oracle
      tenancyId: my-tenancy-id
      userId: my-user-id
    enabled: true
  s3:
    accounts:
    - apiEndpoint: my-s3-endpoint
      apiRegion: my-s3-region
      awsAccessKeyId: my-key-id
      awsSecretAccessKey: my-key
      name: my-s3-account
      region: my-region
    enabled: true
  templates:
  - name: my-template
    templatePath: /var/secrets/my-template
aws:
  accounts:
  - accountId: id
    assumeRole: role
    defaultKeyPair: keyPair
    discovery: discovery
    edda: edda
    environment: env
    externalId: externalid
    lifecycleHooks:
    - defaultResult: ABANDON
      heartbeatTimeout: 12
      lifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
      notificationTargetARN: arn:aws:sns:{{region}}:{{accountId}}:term-targ
      roleARN: arn:aws:iam::{{accountId}}:role-arn
    name: my-aws-account
    regions:
    - name: myregion
  bakeryDefaults:
    awsAccessKey: key
    awsAssociatePublicIpAddress: true
    awsSecretKey: keysecret
    awsSubnetId: subnetid
    awsVpcId: vpcid
    baseImages:
    - baseImage:
        detailedDescription: my detailed description
        id: my-image-id
        shortDescription: my short description
      virtualizationSettings:
      - region: us-west-2
        sourceAmi: my-source-ami
        virtualizationType: pv
    defaultVirtualizationType: pv
    templateFile: file
  defaultKeyPairTemplate: '{{name}}-keypair'
  defaultRegions:
  - name: us-west-2
  defaults:
    iamRole: BaseIAMRole
  enabled: true
  primaryAccount: my-aws-account
cloudfoundry:
  accounts:
  - api: api.sys.somesystem.com
    appsManagerUri: https://apps.sys.somesystem.com
    environment: dev
    metricsUri: https://metrics.sys.somesystem.com
    name: my-cf-account
    password: pw
    permissions: {}
    skipSslValidation: true
    user: username
  enabled: true
  primaryAccount: my-cf-account
dcos:
  accounts:
  - clusters:
    - name: my-dcos-cluster
      serviceKeyFile: /var/secrets/my-dcos-service-key
      uid: my-id
    dockerRegistries:
    - accountName: my-gcr-registry
    environment: dev
    name: my-dcos-account
  clusters:
  - caCertFile: /var/secrets/my-ca-cert-file
    dcosUrl: my-url
    insecureSkipTlsVerify: true
    loadBalancer:
      image: image
      serviceAccountSecret: secret
    name: my-dcos-cluster
  enabled: true
  primaryAccount: my-dcos-account
dockerRegistry:
  accounts:
  - address: https://gcr.io
    cacheIntervalSeconds: 30
    cacheThreads: 1
    clientTimeoutMillis: 60000
    email: fake.email@spinnaker.io
    insecureRegistry: false
    name: my-gcr-registry
    paginateSize: 100
    passwordFile: /var/secrets/gcr-account.json
    repositories:
    - my-repo
    sortTagsByDate: false
    trackDigests: false
    username: _json_key
  enabled: true
  primaryAccount: my-gcr-registry
ecs:
  accounts:
  - awsAccount: my-aws-account
    environment: dev
    name: my-ecs-account
  enabled: true
  primaryAccount: my-ecs-account
google:
  accounts:
  - alphaListed: true
    consul:
      agentEndpoint: localhost
      agentPort: 8500
      enabled: true
    jsonPath: /var/secrets/gce-account.json
    name: my-gce-account
    project: spinnaker-maggie
    regions:
    - us-east1-b
  bakeryDefaults:
    baseImages:
    - baseImage:
        detailedDescription: my detailed description
        id: my-image-id
        imageFamily: true
        shortDescription: my short description
      virtualizationSettings:
        sourceImage: my-source-image
        sourceImageFamily: my-source-image-family
    network: default
    networkProjectId: my-network-project-id
    templateFile: gce.json
    useInternalIp: true
    zone: us-central1-f
  enabled: true
  primaryAccount: my-gce-account
huaweicloud:
  accounts:
  - accountType: dev
    authUrl: myurl
    domainName: my-domain-name
    environment: dev
    insecure: true
    name: my-huawei-account
    password: pw
    projectName: project
    regions:
    - us-east1
    username: username
  bakeryDefaults:
    authUrl: url
    baseImages:
    - baseImage:
        id: myimage
        packageType: deb
        shortDescription: short
        templateFile: file
      virtualizationSettings:
      - eipType: eiptype
        instanceType: instancetype
        region: us-east1
        sourceImageId: id
        sshUserName: username
    domainName: domain-name
    eipBandwidthSize: 10
    insecure: true
    password: pw
    projectName: project
    securityGroup: group
    subnetId: id
    templateFile: file
    username: username
    vpcId: vpcid
  enabled: true
  primaryAccount: my-huawei-account
kubernetes:
  accounts:
  - cacheThreads: 1
    context: spinnaker
    kubeconfigFile: /var/secrets/k8s-kubeconfig
    name: k8s
    omitNamespaces:
    - default
    - kube-public
    - kube-system
    - docs-site-v1
  enabled: true
  primaryAccount: k8s
oracle:
  accounts:
  - compartmentId: compartment-id
    environment: dev
    fingerprint: fingerprint
    name: my-oracle-account
    privateKeyPassphrase: pw
    region: us-east1
    sshPrivateKeyFilePath: /var/secrets/oracle_ssh_key_file
    tenancyId: tenancy-id
    userId: user-id
  bakeryDefaults:
    availabilityDomain: domain
    baseImages:
    - baseImage:
        detailedDescription: blahblahblah
        id: my-base-image
        packageType: deb
        shortDescription: blah
        templateFile: /var/secrets/oracle_template_file
      virtualizationSettings:
        baseImageId: base-image-id
        sshUserName: username
    instanceShape: shape
    subnetId: id
    templateFile: /var/secrets/oracle_template_file
  enabled: true
  primaryAccount: my-oracle-account
