name: default
version: master-latest-unvalidated
providers:
  kubernetes:
    enabled: true
    accounts:
    - name: k8s
      providerVersion: V2
      context: spinnaker
      configureImagePullSecrets: true
      cacheThreads: 1
      omitNamespaces:
      - default
      - kube-public
      - kube-system
      - docs-site-v1
      kubeconfigFile: /var/secrets/k8s-kubeconfig
      checkPermissionsOnStartup: true
    primaryAccount: k8s
  appengine:
    enabled: true
    accounts:
      - name: my-appengine-account
        project: spinnaker-maggie
        jsonPath: /var/secrets/appengine-account.json
        sshTrustUnknownHosts: true
    primaryAccount: my-appengine-account
  google:
    enabled: true
    accounts:
      - name: my-gce-account
        project: spinnaker-maggie
        jsonPath: /var/secrets/gce-account.json
        alphaListed: true
        consul:
          enabled: true
          agentEndpoint: localhost
          agentPort: 8500
          datacenters: []
        regions:
          - us-east1-b
    primaryAccount: my-gce-account
    bakeryDefaults:
      templateFile: gce.json
      baseImages:
        - baseImage:
            id: my-image-id
            shortDescription: my short description
            detailedDescription: my detailed description
            imageFamily: true
          virtualizationSettings:
            sourceImage: my-source-image
            sourceImageFamily: my-source-image-family
      zone: us-central1-f
      network: default
      networkProjectId: my-network-project-id
      useInternalIp: true
  aws:
    enabled: true
    accounts:
      - name: my-aws-account
        environment: env
        defaultKeyPair: keyPair
        edda: edda
        discovery: discovery
        accountId: id
        regions:
          - name: myregion
        assumeRole: role
        lifecycleHooks:
          - defaultResult: ABANDON
            heartbeatTimeout: 12
            lifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
            notificationTargetARN: arn:aws:sns:{{region}}:{{accountId}}:term-targ
            roleARN: arn:aws:iam::{{accountId}}:role-arn
    primaryAccount: my-aws-account
    bakeryDefaults:
      templateFile: file
      baseImages:
      - baseImage:
          id: my-image-id
          shortDescription: my short description
          detailedDescription: my detailed description
        virtualizationSettings:
          sourceAmi: my-source-ami
          virtualizationType: pv
      awsAccessKey: key
      awsSecretKey: keysecret
      awsSubnetId: subnetid
      awsVpcId: vpcid
      awsAssociatePublicIpAddress: true
      defaultVirtualizationType: pv
    defaultKeyPairTemplate: '{{name}}-keypair'
    defaultRegions:
      - name: us-west-2
    defaults:
      iamRole: BaseIAMRole
  cloudfoundry:
    enabled: true
    accounts:
      - name: my-cf-account
        environment: dev
        requiredGroupMembership: []
        permissions: {}
        password: pw
        user: username
        skipSslValidation: true
        api: api.sys.somesystem.com
        appsManagerUri: https://apps.sys.somesystem.com
        metricsUri: https://metrics.sys.somesystem.com
    primaryAccount: my-cf-account
  dcos:
    enabled: true
    accounts:
      - name: my-dcos-account
        environment: dev
        dockerRegistries:
          - accountName: my-gcr-registry
        clusters:
          - name: my-dcos-cluster
            uid: my-id
            serviceKeyFile: /var/secrets/my-dcos-service-key
    primaryAccount: my-dcos-account
    clusters:
      - name: my-dcos-cluster
        dcosUrl: my-url
        caCertFile: /var/secrets/my-ca-cert-file
        insecureSkipTlsVerify: true
        loadBalancer:
          image: image
          serviceAccountSecret: secret
  dockerRegistry:
    enabled: true
    accounts:
    - name: my-gcr-registry
      address: https://gcr.io
      username: _json_key
      email: fake.email@spinnaker.io
      cacheIntervalSeconds: 30
      clientTimeoutMillis: 60000
      cacheThreads: 1
      paginateSize: 100
      sortTagsByDate: false
      trackDigests: false
      insecureRegistry: false
      repositories:
      - my-repo
      passwordFile: /var/secrets/gcr-account.json
    primaryAccount: my-gcr-registry
  ecs:
    enabled: true
    accounts:
    - name: my-ecs-account
      environment: dev
      awsAccount: my-aws-account
    primaryAccount: my-ecs-account
  huaweicloud:
    enabled: true
    accounts:
    - name: my-huawei-account
      environment: dev
      accountType: dev
      authUrl: myurl
      username: username
      password: pw
      projectName: project
      domainName: my-domain-name
      insecure: true
      regions:
      - us-east1
    primaryAccount: my-huawei-account
    bakeryDefaults:
      templateFile: file
      baseImages:
      - baseImage:
          id: myimage
          shortDescription: short
          packageType: deb
          templateFile: file
        virtualizationSettings:
        - region: us-east1
          instanceType: instancetype
          sourceImageId: id
          sshUserName: username
          eipType: eiptype
      authUrl: url
      username: username
      password: pw
      projectName: project
      domainName: domain-name
      insecure: true
      vpcId: vpcid
      subnetId: id
      securityGroup: group
      eipBandwidthSize: 10
  oracle:
    enabled: true
    accounts:
    - name: my-oracle-account
      environment: dev
      compartmentId: compartment-id
      userId: user-id
      fingerprint: fingerprint
      sshPrivateKeyFilePath: /var/secrets/oracle_ssh_key_file
      privateKeyPassphrase: pw
      tenancyId: tenancy-id
      region: us-east1
    primaryAccount: my-oracle-account
    bakeryDefaults:
      templateFile: /var/secrets/oracle_template_file
      baseImages:
      - baseImage:
          id: my-base-image
          shortDescription: blah
          detailedDescription: blahblahblah
          packageType: deb
          templateFile: /var/secrets/oracle_template_file
        virtualizationSettings:
          baseImageId: base-image-id
          sshUserName: username
      availabilityDomain: domain
      subnetId: id
      instanceShape: shape
persistentStorage:
  persistentStoreType: gcs
  azs:
    storageAccountName: my-azs-account-name
    storageAccountKey: bXktYXpzLWFjY291bnQta2V5Cg==
    storageContainerName: spinnaker
  gcs:
    enabled: true
    project: my-gcp-project
    bucket: my-spinnaker-pipelines
    bucketLocation: us
  redis: {}
  s3:
    bucket: my-bucket
    rootFolder: my-root-folder
    region: my-region
    pathStyleAccess: true
    endpoint: my-endpoint
    accessKeyId: my-access-key-id
    serverSideEncryption: AES256
    secretAccessKey: my-secret-access-key
  oracle:
    bucketName: my-bucket
    namespace: my-namespace
    compartmentId: compartment
    region: us-phoenix-1
    userId: my-user-id
    fingerprint: 74:63:08:82:95:75:e1:7c:33:31:bb:cb:00:c0:89:8b
    sshPrivateKeyFilePath: /var/secrets/oracle-key
    privateKeyPassphrase: my-secret
    tenancyId: my-tenancy-id
artifacts:
  bitbucket:
    enabled: true
    accounts:
      - name: my-bitbucket-account
        username: my-bitbucket-username
        password: my-bitbucket-password
        usernamePasswordFile: /var/secrets/bitbucket
  gcs:
    enabled: true
    accounts:
      - name: my-gcs-account
        jsonPath: /var/secrets/gcs
  github:
    enabled: true
    accounts:
      - name: my-github-artifact-account
        tokenFile: /var/secrets/github
      - name: my-github-artifact-account-2
        username: my-username
        password: my-password
  gitlab:
    enabled: true
    accounts:
      - name: my-gitlab-artifact-account
        tokenFile: /var/secrets/gitlab
  gitrepo:
    enabled: true
    accounts:
      - name: my-git-repo-account
        sshPrivateKeyFilePath: /var/secrets/git_repo_private_key
        sshPrivateKeyPassphrase: my-passphrase
        sshKnownHostsFilePath: /var/secrets/known_hosts
  helm:
    enabled: true
    accounts:
      - name: my-helm-account
        repository: http://my-repository.com
        usernamePasswordFile: /var/secrets/helm
  http:
    enabled: true
    accounts:
      - name: my-http-account
        usernamePasswordFile: /var/secrets/http
  maven:
    enabled: true
    accounts:
      - name: my-maven-account
        repositoryUrl: http://some.host.com/repository/path
  oracle:
    enabled: true
    accounts:
      - name: my-oracle-artifact-account
        namespace: my-namespace
        region: my-region
        userId: my-user-id
        fingerprint: my-fingerprint
        sshPrivateKeyFilePath: /var/secrets/oracle
        privateKeyPassphrase: my-passphrase
        tenancyId: my-tenancy-id
  s3:
    enabled: true
    accounts:
      - name: my-s3-account
        apiEndpoint: my-s3-endpoint
        apiRegion: my-s3-region
        region: my-region
        awsAccessKeyId: my-key-id
        awsSecretAccessKey: my-key
  templates:
    - name: my-template
      templatePath: /path/to/my/template
notifications:
  slack:
    enabled: true
    botName: my-bot
    token: my-secret-token
    baseUrl: https://slack.test/
    forceUseIncomingWebhook: true
  twilio:
    enabled: true
    account: my-twilio-account
    baseUrl: https://api.twilio.com/
    from: +1212-555-0100
    token: my-twilio-token
  githubStatus:
    enabled: true
    token: my-github-token
pubsub:
  enabled: true
  google:
    enabled: true
    subscriptions:
    - name: subscription-test
      project: my-project
      subscriptionName: my-subscription
      jsonPath: /var/secrets/my-subscriber-token
      ackDeadlineSeconds: 10
      messageFormat: GCR
    publishers:
    - name: publish-test
      project: my-project
      topicName: my-topic
      jsonPath: /var/secrets/my-publisher-token
      content: NOTIFICATIONS
stats:
  enabled: false
